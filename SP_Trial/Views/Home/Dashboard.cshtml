@model DashboardViewModel
<div id="Dashboard">
<h1 style="text-align: center;">Welcome To <span style="color: #FF5722;">MK</span> Shopping<span style="color: #FF5722;">Kart</span></h1>
<div class="row mb-4">
    <div class="col-md-4">
        <div class="card text-white bg-dark mb-3">
            <div class="card-header">No. of Products</div>
            <div class="card-body">
                <h5 class="card-title">@Model.Products.Count()</h5>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-dark mb-3">
            <div class="card-header">No. of Users</div>
            <div class="card-body">
                <h5 class="card-title">@Model.Users.Count()</h5>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-dark mb-3">
            <div class="card-header">No. of Categories</div>
            <div class="card-body">
                <h5 class="card-title">@Model.Categories.Count()</h5>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-8 offset-md-2">
        <div class="card" style="margin-right:30%;">
            <div class="card-header">
                <h5 class="card-title">Category Wise Products</h5>
            </div>
            <div class="card-body">
                <canvas id="categoryPieChart" style="max-width: 100%; height: 400px;"></canvas>
            </div>
        </div>
    </div>
  </div>
</div>
@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function () {
            var ctx = document.getElementById('categoryPieChart').getContext('2d');
            var categoryNames = @Html.Raw(Json.Serialize(Model.CategoryProductCounts.Select(c => c.CategoryName)));
            var productCounts = @Html.Raw(Json.Serialize(Model.CategoryProductCounts.Select(c => c.ProductCount)));

            var myPieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: categoryNames,
                    datasets: [{
                        label: 'Category Wise Products',
                        data: productCounts,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.6)',
                            'rgba(54, 162, 235, 0.6)',
                            'rgba(255, 206, 86, 0.6)',
                            'rgba(75, 192, 192, 0.6)',
                            'rgba(153, 102, 255, 0.6)',
                            'rgba(255, 159, 64, 0.6)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            callbacks: {
                                label: function (tooltipItem) {
                                    return tooltipItem.label + ': ' + tooltipItem.raw.toFixed(2);
                                }
                            }
                        }
                    },
                    elements: {
                        arc: {
                            borderWidth: 0
                        }
                    }
                }
            });
        });
    </script>
}

@* <div class="row">
    <div class="col-md-8 offset-md-2">
        <canvas id="categoryPieChart"></canvas>
    </div>
</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function () {
            var ctx = document.getElementById('categoryPieChart').getContext('2d');
            var categoryNames = @Html.Raw(Json.Serialize(Model.CategoryProductCounts.Select(c => c.CategoryName)));
            var productCounts = @Html.Raw(Json.Serialize(Model.CategoryProductCounts.Select(c => c.ProductCount)));

            var myPieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: categoryNames,
                    datasets: [{
                        label: 'Category Wise Products',
                        data: productCounts,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.6)',
                            'rgba(54, 162, 235, 0.6)',
                            'rgba(255, 206, 86, 0.6)',
                            'rgba(75, 192, 192, 0.6)',
                            'rgba(153, 102, 255, 0.6)',
                            'rgba(255, 159, 64, 0.6)'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });
        });
    </script>
} *@




@* @model DashboardViewModel

<h1 style="text-align: center;">Welcome To <span style="color: #FF5722;">MK</span> Shopping<span style="color: #FF5722;">Kart</span></h1>

<div class="row mb-4">
    <div class="col-md-4">
        <div class="card text-white bg-dark mb-3">
            <div class="card-header">No. of Products</div>
            <div class="card-body">
                <h5 class="card-title">@Model.Products.Count()</h5>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-dark mb-3">
            <div class="card-header">No. of Users</div>
            <div class="card-body">
                <h5 class="card-title">@Model.Users.Count()</h5>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-dark mb-3">
            <div class="card-header">No. of Categories</div>
            <div class="card-body">
                <h5 class="card-title">@Model.Categories.Count()</h5>
            </div>
        </div>
    </div>
</div> *@

@* <div class="row">
    <div class="col-md-6">
        <h3>Products</h3>
        <div id="productList">
            @await Html.PartialAsync("_ProductListPartial", Model.Products)
        </div>
    </div>
    <div class="col-md-6">
        <h3>Users</h3>
        <div id="userList">
            @await Html.PartialAsync("_UserListPartial", Model.Users)
        </div>
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-6">
        <h3>Categories</h3>
        <div id="categoryList">
            @await Html.PartialAsync("_CategoryListPartial", Model.Categories)
        </div>
    </div>
</div> *@